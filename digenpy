#!/usr/bin/env python
"""
 Copyright (C) 2010 David Francos Cuartero
         This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

"""

from Digenpy_ import *
import sys, Digenpy_, types
from optparse import OptionParser

parser = OptionParser(usage="%prog [-y|--year YEAR] -u|--country COUNTRY\
      -p|--company COMPANY -M|--mac MAC -E|--essid ESSID", version="%prog 1.0")
parser.add_option("-y", "--year", dest="year", help="Router year")
parser.add_option("-u", "--country", dest="country", help="Country")
parser.add_option("-p", "--company", dest="company", help="Router company")
parser.add_option("-M", "--mac", dest="mac", help="Router year")
parser.add_option("-E", "--essid", dest="essid", help="Router year")
parser.add_option("-s", "--show", action="store_bool", dest="show_countries",
        help="Display all available companies for all available countries")

if not options.country and options.company and options.mac and options.essid:
    parser.error("Country, company, mac and essid are necessary")

if options.show_countries:
    for module in [ getattr(Digenpy, mod) for mod in Digenpy_.__all__ ]:
        help_=[ getattr(module, func)('').dictionary for func in dir(module)
                if isinstance(getattr(module, func, None), types.ClassType) ]
        printer(help_, 'Available countries')
    sys.exit(0)

def printer(a_print, help_=False):
    if help_: print help_
    if a_print.__class__ is not types.ListType:
        print a_print
    else:
        for a in a_print: print a

module=getattr(Digenpy_, parser.country) 
printer( getattr( getattr(Digenpy_, parser.country),
    parser.company)(class_arguments).dictionary)
